---
- name: backup | Make sure target path exists
  ansible.builtin.file:
    path: "{{ homestack_backup_script_path }}"
    state: directory
    mode: "0755"

- name: backup | Remove script with common functions
  ansible.builtin.file:
    path: "{{ homestack_backup_script_path }}/container_backup_common.sh"
    state: absent
  when: homestack_backup

- name: backup | Copy nextcloud backup script
  ansible.builtin.copy:
    src: "backup/nextcloud_container_backup.sh"
    dest: "{{ homestack_backup_script_path }}/nextcloud_container_backup.sh"
    mode: "0700"
  when: homestack_nextcloud_active

- name: backup | Copy nextcloud backup script env vars file
  ansible.builtin.template:
    src: "backup/nextcloud_env_vars.sh.j2"
    dest: "{{ homestack_backup_script_path }}/nextcloud_env_vars.sh"
    mode: "0700"
  when: homestack_nextcloud_active

- name: backup | Remove old ha backup scripts
  ansible.builtin.file:
    path: "{{ homestack_backup_script_path }}/{{ template_file | basename | regex_replace('\\.j2$', '') }}"
    state: absent
  loop: "{{ query('ansible.builtin.fileglob', '{{ role_path }}/templates/backup/evcc/*') }}"
  loop_control:
    loop_var: template_file
  when: homestack_ha_active

- name: backup | Copy evcc backup script
  ansible.builtin.copy:
    src: "backup/evcc_container_backup.sh"
    dest: "{{ homestack_backup_script_path }}/evcc_container_backup.sh"
    mode: "0700"
  when: homestack_ha_active

- name: backup | Copy evcc backup script env vars file
  ansible.builtin.template:
    src: "backup/evcc_env_vars.sh.j2"
    dest: "{{ homestack_backup_script_path }}/evcc_env_vars.sh"
    mode: "0700"
  when: homestack_ha_active
