{{ ansible_managed | comment }}
---
services:
  vwsfriend:
    container_name: vwsfriend
    depends_on:
      vwsfriend-db:
        condition: service_healthy
    image: tillsteinbach/vwsfriend:{{ homestack_vwsfriend_image_version }}
    healthcheck:
      test: (wget -qO- http://localhost:{{ homestack_vwsfriend_port }}/healthcheck | grep "ok" -q) || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
    labels:
      traefik.enable: true
      traefik.docker.network: traefik-net

      traefik.http.routers.vwsfriend.rule: "Host(`vwsfriend.{{ homestack_vwsfriend_base_domain }}`)"
      traefik.http.routers.vwsfriend.entrypoints: websecure
      traefik.http.routers.vwsfriend.tls.options: modern@file
      traefik.http.services.vwsfriend.loadbalancer.server.port: "{{ homestack_vwsfriend_port }}"
    networks:
      - traefik
      - vwsfriend
    volumes:
      - "{{ homestack_vwsfriend_base_path }}/config:/config"
    environment:
      VWSFRIEND_USERNAME: "{{ homestack_vwsfriend_username }}"
      VWSFRIEND_PASSWORD: "{{ homestack_vwsfriend_password }}"
      VWSFRIEND_PORT: "{{ homestack_vwsfriend_port }}"
      WECONNECT_USER: "{{ homestack_vwsfriend_weconnect_user }}"
      WECONNECT_PASSWORD: "{{ homestack_vwsfriend_weconnect_password }}"
      WECONNECT_SPIN: "{{ homestack_vwsfriend_weconnect_spin }}"
      WECONNECT_INTERVAL: "{{ homestack_vwsfriend_weconnect_interval }}"
      DATABASE_URL: "postgresql://{{ homestack_vwsfriend_db_user }}:{{ homestack_vwsfriend_db_password }}@vwsfriend-db:5432/{{ homestack_vwsfriend_db_name }}"
      ADDITIONAL_PARAMETERS: "--with-database --with-abrp {{ homestack_vwsfriend_additional_parameters }}"
    restart: unless-stopped

  vwsfriend-db:
    image: postgres:13
    networks:
      - vwsfriend
    volumes:
      - "{{ homestack_vwsfriend_base_path }}/db:/var/lib/postgresql/data"
    user: postgres
    environment:
      POSTGRES_USER: "{{ homestack_vwsfriend_db_user }}"
      POSTGRES_PASSWORD: "{{ homestack_vwsfriend_db_password }}"
      POSTGRES_DB: "{{ homestack_vwsfriend_db_name }}"
      TZ: "UTC"
      PGTZ: "UTC"
    command: -p {{ homestack_vwsfriend_db_port }}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p {{ homestack_vwsfriend_db_port }} --username={{ homestack_vwsfriend_db_user }} --dbname={{ homestack_vwsfriend_db_name }}"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: tillsteinbach/vwsfriend-grafana:{{ homestack_vwsfriend_grafana_version }}
    container_name: grafana
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.rule: "Host(`vw-grafana.{{ homestack_vwsfriend_base_domain }}`)"
      traefik.http.routers.grafana.entrypoints: websecure
      traefik.http.routers.grafana.tls.options: modern@file
      traefik.docker.network: traefik-net
    networks:
      - traefik
      - vwsfriend
    volumes:
      - "{{ homestack_vwsfriend_base_path }}/grafana:/var/lib/grafana"
    environment:
      GF_SECURITY_ADMIN_USER: "{{ homestack_vwsfriend_username }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ homestack_vwsfriend_password }}"
      DB_USER: "{{ homestack_vwsfriend_db_user }}"
      DB_PASSWORD: "{{ homestack_vwsfriend_db_password }}"
      DB_HOSTNAME: "vwsfriend-db"
      DB_PORT: "5432"
      DB_NAME: "{{ homestack_vwsfriend_db_name }}"
      VWSFRIEND_USERNAME: "{{ homestack_vwsfriend_username }}"
      VWSFRIEND_PASSWORD: "{{ homestack_vwsfriend_password }}"
      VWSFRIEND_HOSTNAME: "vwsfriend.{{ homestack_vwsfriend_base_domain }}"
      VWSFRIEND_PORT: "{{ homestack_vwsfriend_port }}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:3000"]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 30s 

networks:
  traefik:
    name: traefik-net
    external: true
  vwsfriend:
    name: ha-net
    internal: true
    ipam:
      config:
        - subnet: 172.20.5.0/24
