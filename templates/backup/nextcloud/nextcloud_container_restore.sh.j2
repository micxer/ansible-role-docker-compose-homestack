#!/bin/bash

# Exit on error, undefined variables, and pipe failures
set -euo pipefail

# logging function
source {{ homestack_backup_script_path }}/container_backup_common.sh

# Function to disable maintenance mode and exit
cleanup() {
    local exit_code=$?
    if [ $exit_code -ne 0 ]; then
        log_message "An error occurred restoration (exit code: $exit_code)" high
    fi
    
    # Clean up temporary files
    if [ -f "$MYSQL_CNF" ]; then
        docker exec nc-db rm -f /tmp/restore.cnf
        rm -f "$MYSQL_CNF"
    fi
    
    exit $exit_code
}

# Register the cleanup function to run on script exit
trap cleanup EXIT

# check that containers are running
if ! docker ps --filter name=nc-db | grep -q "nc-db"
then
    log_message "Nextcloud database container is not running" default
    exit 1
fi

if ! docker ps --filter name=nextcloud | grep -q "nextcloud"
then
    docker stop nextcloud && log_message "Stopped nextcloud container" default
fi

# Restore restic snapshot
if ! autorestic restore --location nextcloud --from backblaze --to "{{ appdata_path }}/nextcloud/" latest:"{{ appdata_path }}/nextcloud/.zfs/snapshot/restic"
then
    log_message "Failed to restore restic snapshot"
    exit 1
fi

# Check if backup folder exists and contains files
if [ ! -d "{{ appdata_path }}/nextcloud/db-backup/" ] || [ -z "$(ls -A "{{ appdata_path }}/nextcloud/db-backup/")" ]; then
    log_message "No database backup files found" error
    exit 1
fi

# Look for first file in folder "{{ appdata_path }}/nextcloud/db-backup/"
backupFile=$(find "{{ appdata_path }}/nextcloud/db-backup/" -type f -printf "%T@ %p\n" | sort -n | tail -n 1 | awk '{print $2}')

# Validate backup file after finding it
if [ -z "$backupFile" ] || [ ! -f "$backupFile" ]; then
    log_message "Could not find a valid backup file" error
    exit 1
fi

# Restore DB backup
if ! (gunzip < "$backupFile" | docker exec -i "nc-db" /usr/bin/mariadb -u "root" -p"{{ homestack_nextcloud_mysql_root_password }}" "nextcloud")
then
    log_message "Failed to restore DB backup"
    exit 1
fi

# Only remove backup files after confirming restoration success
# Test DB connection first
if docker exec "nc-db" /usr/bin/mariadb -u "root" -p"{{ homestack_nextcloud_mysql_root_password }}" -e "SHOW TABLES" nextcloud > /dev/null; then
    log_message "Database restore verification successful" default
    rm "$backupFile"
    rmdir "{{ appdata_path }}/nextcloud/db-backup"
else
    log_message "Database restore verification failed - keeping backup files" error
    exit 1
fi

log_message "Restore successful"
echo
echo "Restore successful. To activate the nextcloud container (if it was running before), run the following command:"
echo "docker start nextcloud"
echo
echo "After activating the nextcloud container, you have to deactivate the maintenance mode manually:"
echo "docker exec -u {{ nextcloud_uid }} nextcloud php occ maintenance:mode --off"
echo
echo "If you have restored from scratch, you have to update the .htaccess file manually:"
echo "docker exec -u {{ nextcloud_uid }} nextcloud php occ maintenance:update:htaccess"
echo
