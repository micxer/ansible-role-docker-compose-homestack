{{ ansible_managed | comment }}
---
services:
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:{{ homestack_ha_mosquitto_image_version }}
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck", "-W", "3"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    labels:
      traefik.enable: true
      traefik.docker.network: traefik-net

      traefik.tcp.routers.mosquitto.rule: "HostSNI(`mosquitto.{{ homestack_ha_base_domain }}`)"
      traefik.tcp.routers.mosquitto.entrypoints: mqtts
      traefik.tcp.routers.mosquitto.service: mosquitto_service
      traefik.tcp.routers.mosquitto.tls: true
      traefik.tcp.routers.mosquitto.tls.certresolver: hostingde
      # Because Traefik handles TLS outside Mosquitto internal does not need TLS
      traefik.tcp.services.mosquitto_service.loadbalancer.server.port: 1883

      # Websock uses the http protocol but in combination with a TCP handler on port 8883 for mqtt you need to specify it
      traefik.http.routers.mqttws.rule: "Host(`mosquitto.{{ homestack_ha_base_domain }}`)"
      traefik.http.routers.mqttws.entrypoints: websecure
      traefik.http.routers.mqttws.service: websockservice
      traefik.http.routers.mqttws.tls: true
      traefik.http.routers.mqttws.tls.certresolver: hostingde
      # Because Traefik handles https outside Mosquitto so websock internal does not need TLS
      traefik.http.services.websockservice.loadbalancer.server.port: 9001
    networks:
      - traefik
      - home_automation
    restart: unless-stopped
    user: "{{ homestack_uid }}:{{ homestack_gid }}"
    volumes:
      - "{{ homestack_ha_mosquitto_base_path }}/config:/mosquitto/config"
      - "{{ homestack_ha_mosquitto_base_path }}/data:/mosquitto/data"
      - "{{ homestack_ha_mosquitto_base_path }}/log:/mosquitto/log"

  evcc:
    container_name: evcc
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:7070/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s 
    image: evcc/evcc:{{ homestack_ha_evcc_image_version }}
    labels:
      traefik.enable: true
      traefik.http.routers.evcc.rule: "Host(`evcc.{{ homestack_monitoring_base_domain }}`)"
      traefik.http.routers.evcc.entrypoints: websecure
      traefik.http.routers.evcc.tls.options: modern@file
      traefik.docker.network: traefik-net
      traefik.http.services.evcc.loadbalancer.server.port: "7070"
    networks:
      - traefik
      - home_automation
    # ports:
    #   - 4712:4712/tcp  # EEBus
    #   - 7070:7070/tcp  # UI and /api
    #   - 8887:8887/tcp  # OCPP charger
    #   - 8899:8899/udp  # Modbus UDP
    restart: unless-stopped
    volumes:
      - "{{ homestack_ha_evcc_base_path }}/evcc.yaml:/etc/evcc.yaml"
      - "{{ homestack_ha_evcc_base_path }}/data:/root/.evcc"

networks:
  traefik:
    name: traefik-net
    external: true
  home_automation:
    name: ha-net
    internal: true
    ipam:
      config:
        - subnet: 172.20.4.0/24
